import { QueryKey, UseInfiniteQueryOptions, UseInfiniteQueryResult } from "react-query";
import { Query, DocumentData, SnapshotOptions, FirestoreError } from "firebase/firestore";
import { GetSnapshotSource, WithIdField } from "./index";
export declare function useFirestoreInfiniteQueryData<T = DocumentData, R = WithIdField<T>[]>(key: QueryKey, initialQuery: Query<T>, getNextQuery: (data: T[]) => Query<T> | undefined, options?: {
    source?: GetSnapshotSource;
} & SnapshotOptions, useInfiniteQueryOptions?: Omit<UseInfiniteQueryOptions<WithIdField<T>[], FirestoreError, R>, "queryFn" | "getNextPageParam">): UseInfiniteQueryResult<R, FirestoreError>;
export declare function useFirestoreInfiniteQueryData<ID extends string, T = DocumentData, R = WithIdField<T, ID>[]>(key: QueryKey, initialQuery: Query<T>, getNextQuery: (data: T[]) => Query<T> | undefined, options?: {
    source?: GetSnapshotSource;
} & SnapshotOptions & {
    idField: ID;
}, useInfiniteQueryOptions?: Omit<UseInfiniteQueryOptions<WithIdField<T, ID>[], FirestoreError, R>, "queryFn" | "getNextPageParam">): UseInfiniteQueryResult<R, FirestoreError>;
