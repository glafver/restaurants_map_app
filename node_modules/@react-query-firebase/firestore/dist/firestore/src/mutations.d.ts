import { CollectionReference, DocumentData, DocumentReference, Firestore, SetOptions, Transaction, WithFieldValue, WriteBatch, FirestoreError } from "firebase/firestore";
import { UseMutationOptions, UseMutationResult } from "react-query";
export declare function useFirestoreCollectionMutation<T = DocumentData>(ref: CollectionReference<T>, useMutationOptions?: UseMutationOptions<DocumentReference<T>, FirestoreError, WithFieldValue<T>>): UseMutationResult<DocumentReference<T>, FirestoreError, WithFieldValue<T>>;
export declare function useFirestoreDocumentMutation<T = DocumentData>(ref: DocumentReference<T>, options?: SetOptions, useMutationOptions?: UseMutationOptions<void, FirestoreError, WithFieldValue<T>>): UseMutationResult<void, FirestoreError, WithFieldValue<T>>;
export declare function useFirestoreDocumentDeletion(ref: DocumentReference, useMutationOptions?: UseMutationOptions<void, FirestoreError, void>): UseMutationResult<void, FirestoreError, void>;
export declare function useFirestoreTransaction<T = void>(firestore: Firestore, updateFunction: (tsx: Transaction) => Promise<T>, useMutationOptions?: UseMutationOptions<T, FirestoreError, void>): UseMutationResult<T, FirestoreError, void>;
export declare function useFirestoreWriteBatch(batch: WriteBatch, useMutationOptions?: UseMutationOptions<void, FirestoreError, void>): UseMutationResult<void, FirestoreError, void>;
